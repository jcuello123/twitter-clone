{"version":3,"sources":["util/posts.js","components/posts.jsx","components/signup.jsx","components/landing.jsx","App.js","serviceWorker.js","index.js"],"names":["appendPost","post","color","likes","div","document","createElement","className","h4","innerText","name","p","date","textArea","id","readOnly","content","span","likeButton","innerHTML","style","numOfLikes","undefined","display","addEventListener","liked","parseInt","postUpdate","fetch","then","response","json","username","method","headers","body","JSON","stringify","handleLike","appendChild","querySelector","prepend","module","exports","listAllPosts","getElementById","data","forEach","likedBy","includes","Posts","state","ensureAuthenticated","status","props","history","push","handlePost","e","preventDefault","form","formData","FormData","getUserName","get","Date","toLocaleString","value","snookBtn","disabled","localStorage","setItem","setTimeout","handleLogout","user","setState","bind","title","this","getItem","Helmet","onClick","onSubmit","htmlFor","maxLength","required","Component","withRouter","SignUp","handleSubmit","pass","confirmPass","password","signUpStatus","action","type","to","Landing","handleLogin","catch","err","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.1485ce98.chunk.js","sourcesContent":["function appendPost(post, color, likes) {\r\n  const div = document.createElement(\"div\");\r\n  div.className = \"post\";\r\n\r\n  const h4 = document.createElement(\"h4\");\r\n  h4.innerText = post.name;\r\n\r\n  const p = document.createElement(\"p\");\r\n  p.innerText = post.date;\r\n\r\n  const textArea = document.createElement(\"textarea\");\r\n  textArea.id = \"content\";\r\n  textArea.readOnly = true;\r\n  textArea.innerText = post.content;\r\n\r\n  const span = document.createElement(\"span\");\r\n  span.className = \"like-container\";\r\n\r\n  const likeButton = document.createElement(\"button\");\r\n  likeButton.innerHTML = \"&#x2661;\"; //heart symbol\r\n  likeButton.id = \"like-button\";\r\n  likeButton.style.color = color;\r\n\r\n  const numOfLikes = document.createElement(\"p\");\r\n  numOfLikes.id = \"numOfLikes\";\r\n  if (likes === undefined) likes = 0;\r\n  numOfLikes.innerText = likes;\r\n  numOfLikes.style.display = \"inline\";\r\n\r\n  likeButton.addEventListener(\"click\", () => {\r\n    handleLike(likeButton, numOfLikes, post);\r\n  });\r\n\r\n  span.style.display = \"inline\";\r\n  span.appendChild(likeButton);\r\n  span.appendChild(numOfLikes);\r\n\r\n  div.appendChild(h4);\r\n  div.appendChild(p);\r\n  div.appendChild(textArea);\r\n  div.appendChild(span);\r\n\r\n  document.querySelector(\".posts\").prepend(div);\r\n}\r\n\r\nfunction listAllPosts() {\r\n  //get req.user.username\r\n  fetch(\"/api/posts/login\")\r\n    .then((response) => response.json())\r\n    .then((username) => {\r\n      document.getElementById(\"username\").innerHTML = username;\r\n      //get all posts\r\n      fetch(\"/api/posts\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          data.forEach((post) => {\r\n            const color = post.likedBy.includes(username) ? \"red\" : \"#2d3842\";\r\n            const likes = post.likes;\r\n            appendPost(post, color, likes);\r\n          });\r\n        });\r\n    });\r\n}\r\n\r\nfunction handleLike(likeButton, numOfLikes, post) {\r\n  let liked = likeButton.style.color === \"red\" ? false : true;\r\n\r\n  if (liked) {\r\n    likeButton.style.color = \"red\";\r\n    numOfLikes.innerText = parseInt(numOfLikes.innerText) + 1;\r\n  } else {\r\n    likeButton.style.color = \"#2d3842\";\r\n    numOfLikes.innerText = parseInt(numOfLikes.innerText) - 1;\r\n    liked = false;\r\n  }\r\n\r\n  let postUpdate = {};\r\n\r\n  //get req.user.username\r\n  fetch(\"/api/posts/login\")\r\n    .then((response) => response.json())\r\n    .then((username) => {\r\n      postUpdate = {\r\n        post: post,\r\n        username: username,\r\n        liked: liked,\r\n      };\r\n    })\r\n\r\n    //send post that was just liked/unliked and process in server\r\n    .then((response) => {\r\n      fetch(\"/api/posts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(postUpdate),\r\n      });\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n  appendPost: appendPost,\r\n  listAllPosts: listAllPosts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { appendPost, listAllPosts } from \"../util/posts\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    username: null,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.handlePost = this.handlePost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"Snookbook\";\r\n\r\n    this.ensureAuthenticated();\r\n\r\n    //disable the post button for 10 seconds after posting\r\n    const snookBtn = document.getElementById(\"snook-btn\");\r\n    snookBtn.disabled =\r\n      localStorage.getItem(\"isButtonDisabled\") === \"true\" ? true : false;\r\n\r\n    if (localStorage.getItem(\"isButtonDisabled\")) {\r\n      setTimeout(() => {\r\n        snookBtn.disabled = false;\r\n        localStorage.setItem(\"isButtonDisabled\", false);\r\n      }, 10000);\r\n    }\r\n\r\n    listAllPosts();\r\n  }\r\n\r\n  ensureAuthenticated = () => {\r\n    fetch(\"/api/posts\")\r\n      .then((response) => response.json())\r\n      .then((status) => {\r\n        if (status === \"failed\") {\r\n          this.props.history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  handlePost = (e) => {\r\n    e.preventDefault();\r\n\r\n    //format the post\r\n    const form = document.getElementById(\"snook-form\");\r\n    const formData = new FormData(form);\r\n    const post = {\r\n      name: this.getUserName(),\r\n      content: formData.get(\"content\"),\r\n      date: new Date().toLocaleString(\"en-US\"),\r\n    };\r\n\r\n    //Send post to server\r\n    fetch(\"/api/posts\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    });\r\n\r\n    //append post\r\n    appendPost(post);\r\n\r\n    //clear text\r\n    document.getElementById(\"input-content\").value = \"\";\r\n\r\n    //disable send button for 10 seconds\r\n    const snookBtn = document.getElementById(\"snook-btn\");\r\n    snookBtn.disabled = true;\r\n    localStorage.setItem(\"isButtonDisabled\", true);\r\n\r\n    setTimeout(() => {\r\n      snookBtn.disabled = false;\r\n      localStorage.setItem(\"isButtonDisabled\", false);\r\n    }, 10000);\r\n  };\r\n\r\n  handleLogout = () => {\r\n    fetch(\"/api/posts/logout\").then((response) => {\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  getUserName = () => {\r\n    let user = \"\";\r\n\r\n    if (this.state.username === null) {\r\n      fetch(\"/api/posts/login\")\r\n        .then((response) => response.json())\r\n        .then((username) => {\r\n          user = username;\r\n          this.setState({ username });\r\n        });\r\n      return user;\r\n    } else return this.state.username;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style>{\"body { background-color: #15202b; color: white;}\"}</style>\r\n        </Helmet>\r\n        <header>\r\n          <nav>\r\n            <button className=\"m-2\" onClick={this.handleLogout}>\r\n              Logout\r\n            </button>\r\n            <p id=\"username\" className=\"m-2\"></p>\r\n          </nav>\r\n        </header>\r\n        <h1 className=\"text-center\">Snookbook - Facebook for Snooks</h1>\r\n        <div className=\"container posts-container\">\r\n          <form id=\"snook-form\" onSubmit={this.handlePost}>\r\n            <label htmlFor=\"content\">Content</label>\r\n            <br />\r\n            <textarea\r\n              id=\"input-content\"\r\n              className=\"inp\"\r\n              name=\"content\"\r\n              maxLength=\"200\"\r\n              required\r\n            ></textarea>\r\n            <br />\r\n            <button className=\"btn btn-primary my-3\" id=\"snook-btn\">\r\n              Send your Snook!\r\n            </button>\r\n          </form>\r\n          <div className=\"posts\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Posts);\r\n","import React, { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SignUp extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const username = document.getElementById(\"input-name\").value;\r\n    const pass = document.getElementById(\"input-password\").value;\r\n    const confirmPass = document.getElementById(\"confirm-password\").value;\r\n    const status = document.getElementById(\"signup-status\");\r\n\r\n    if (pass !== confirmPass) {\r\n      status.innerText = \"Passwords don't match.\";\r\n      status.style.color = \"red\";\r\n    } else {\r\n      const user = {\r\n        username: username,\r\n        password: pass,\r\n      };\r\n\r\n      fetch(\"/api/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      }).then((response) =>\r\n        response.json().then((signUpStatus) => {\r\n          if (signUpStatus === \"successful\") {\r\n            status.innerText = \"Account creation was successful.\";\r\n            status.style.color = \"green\";\r\n          } else if (signUpStatus === \"failed\") {\r\n            status.innerText = \"Username already exists.\";\r\n            status.style.color = \"red\";\r\n          } else {\r\n            status.innerText = \"An error has occured. Please try again.\";\r\n            status.style.color = \"red\";\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style>{\"body { background-color: #15202b; color: white;}\"}</style>\r\n        </Helmet>\r\n        <h1 className=\"text-center\">Create your Snookbook account</h1>\r\n        <div className=\"signup-container\">\r\n          <form action=\"POST\">\r\n            <p id=\"signup-status\"></p>\r\n            <label htmlFor=\"username\">Create Username</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"input-name\"\r\n              className=\"inp\"\r\n              required\r\n            />\r\n            <br />\r\n            <label htmlFor=\"password\">Create Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"input-password\"\r\n              className=\"inp\"\r\n              required\r\n            />\r\n            <br />\r\n            <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmpassword\"\r\n              id=\"confirm-password\"\r\n              className=\"inp\"\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Sign up\"\r\n              className=\"btn btn-primary my-3\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </form>\r\n          <p>\r\n            <Link to=\"/\">Login</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const username = document.getElementById(\"input-name\").value;\r\n    const password = document.getElementById(\"input-password\").value;\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    //send login info to server and try to authenticate\r\n    fetch(\"/api/posts/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((status) => {\r\n        this.props.history.push(\"posts\");\r\n      })\r\n      .catch((err) => {\r\n        const status = document.getElementById(\"login-status\");\r\n        status.style.color = \"red\";\r\n        status.innerText = \"Incorrect username or password\";\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style>{\"body { background-color: #15202b; color: white;}\"}</style>\r\n        </Helmet>\r\n        <h1 className=\"text-center\">Snookbook - Facebook for Snooks</h1>\r\n        <div className=\"login-container\">\r\n          <form id=\"login-form\">\r\n            <p id=\"login-status\"></p>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <br />\r\n            <input id=\"input-name\" className=\"inp\" name=\"name\" type=\"text\" required />\r\n            <br />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <br />\r\n            <input id=\"input-password\" className=\"inp\" type=\"password\" />\r\n            <br />\r\n            <button\r\n              onClick={this.handleLogin}\r\n              className=\"btn btn-primary my-3\"\r\n              id=\"login-btn\"\r\n            >\r\n              Log in\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Don't have an account? <Link to=\"/signup\">Sign up.</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Posts from \"./components/posts\";\r\nimport SignUp from \"./components/signup\";\r\nimport Landing from \"./components/landing\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/posts\" component={Posts} />\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}