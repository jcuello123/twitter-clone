{"version":3,"sources":["util/posts.js","components/posts.jsx","components/signup.jsx","components/landing.jsx","App.js","serviceWorker.js","index.js"],"names":["appendPost","post","div","document","createElement","className","h4","innerText","name","p","date","textArea","id","readOnly","content","span","likeButton","innerHTML","numOfLikes","style","display","addEventListener","color","parseInt","handleLike","appendChild","querySelector","prepend","module","exports","listAllPosts","fetch","then","response","json","data","forEach","Posts","handleSubmit","e","preventDefault","form","getElementById","formData","FormData","get","Date","toLocaleString","method","headers","body","JSON","stringify","value","snookBtn","disabled","localStorage","setItem","setTimeout","bind","title","getItem","Helmet","onSubmit","this","htmlFor","maxLength","required","Component","SignUp","username","pass","confirmPass","status","user","password","signUpStatus","action","type","onClick","to","Landing","state","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f8519bad.chunk.js","sourcesContent":["function appendPost(post) {\r\n  const div = document.createElement(\"div\");\r\n  div.className = \"post\";\r\n\r\n  const h4 = document.createElement(\"h4\");\r\n  h4.innerText = post.name;\r\n\r\n  const p = document.createElement(\"p\");\r\n  p.innerText = post.date;\r\n\r\n  const textArea = document.createElement(\"textarea\");\r\n  textArea.id = \"content\";\r\n  textArea.readOnly = true;\r\n  textArea.innerText = post.content;\r\n\r\n  const span = document.createElement(\"span\");\r\n  span.className = \"like-container\";\r\n\r\n  const likeButton = document.createElement(\"button\");\r\n  likeButton.innerHTML = \"&#x2661;\"; //heart symbol\r\n  likeButton.id = \"like-button\";\r\n\r\n  const numOfLikes = document.createElement(\"p\");\r\n  numOfLikes.id = \"numOfLikes\";\r\n  numOfLikes.innerText = \"0\";\r\n  numOfLikes.style.display = \"inline\";\r\n\r\n  likeButton.addEventListener(\"click\", () => {\r\n    handleLike(likeButton, numOfLikes);\r\n  });\r\n\r\n  span.style.display = \"inline\";\r\n  span.appendChild(likeButton);\r\n  span.appendChild(numOfLikes);\r\n\r\n  div.appendChild(h4);\r\n  div.appendChild(p);\r\n  div.appendChild(textArea);\r\n  div.appendChild(span);\r\n\r\n  document.querySelector(\".posts\").prepend(div);\r\n}\r\n\r\nfunction listAllPosts() {\r\n  fetch(\"/posts\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      data.forEach((post) => {\r\n        appendPost(post);\r\n      });\r\n    });\r\n}\r\n\r\nfunction handleLike(likeButton, numOfLikes) {\r\n  const color = likeButton.style.color;\r\n  likeButton.style.color = color === \"red\" ? \"#2d3842\" : \"red\";\r\n\r\n  numOfLikes.innerText = parseInt(numOfLikes.innerText) + 1;\r\n}\r\n\r\nmodule.exports = {\r\n  appendPost: appendPost,\r\n  listAllPosts: listAllPosts\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { appendPost, listAllPosts } from \"../util/posts\";\r\n\r\nclass Posts extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"Snookbook\";\r\n\r\n    const snookBtn = document.getElementById(\"snook-btn\");\r\n    snookBtn.disabled =\r\n      localStorage.getItem(\"isButtonDisabled\") === \"true\" ? true : false;\r\n\r\n    if (localStorage.getItem(\"isButtonDisabled\")) {\r\n      setTimeout(() => {\r\n        snookBtn.disabled = false;\r\n        localStorage.setItem(\"isButtonDisabled\", false);\r\n      }, 10000);\r\n    }\r\n\r\n    listAllPosts();\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //format the post\r\n    const form = document.getElementById(\"snook-form\");\r\n    const formData = new FormData(form);\r\n    const post = {\r\n      name: formData.get(\"name\"),\r\n      content: formData.get(\"content\"),\r\n      date: new Date().toLocaleString(\"en-US\"),\r\n    };\r\n\r\n    //Send post to server\r\n    fetch(\"/api/posts\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    });\r\n\r\n    //append post\r\n    appendPost(post);\r\n\r\n    //clear text\r\n    document.getElementById(\"input-content\").value = \"\";\r\n\r\n    //disable send button for 10 seconds\r\n    const snookBtn = document.getElementById(\"snook-btn\");\r\n    snookBtn.disabled = true;\r\n    localStorage.setItem(\"isButtonDisabled\", true);\r\n\r\n    setTimeout(() => {\r\n      snookBtn.disabled = false;\r\n      localStorage.setItem(\"isButtonDisabled\", false);\r\n    }, 10000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style>{\"body { background-color: #15202b; color: white;}\"}</style>\r\n        </Helmet>\r\n        <h1 className=\"text-center\">Snookbook - Facebook for Snooks</h1>\r\n        <div className=\"container posts-container\">\r\n          <form id=\"snook-form\" onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"content\">Content</label>\r\n            <br />\r\n            <textarea\r\n              id=\"input-content\"\r\n              name=\"content\"\r\n              maxLength=\"200\"\r\n              required\r\n            ></textarea>\r\n            <br />\r\n            <button className=\"btn btn-primary my-3\" id=\"snook-btn\">\r\n              Send your Snook!\r\n            </button>\r\n          </form>\r\n          <div className=\"posts\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SignUp extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const username = document.getElementById(\"input-name\").value;\r\n    const pass = document.getElementById(\"input-password\").value;\r\n    const confirmPass = document.getElementById(\"confirm-password\").value;\r\n    const status = document.getElementById(\"signup-status\");\r\n\r\n    if (pass !== confirmPass) {\r\n      status.innerText = \"Passwords don't match.\";\r\n      status.style.color = \"red\";\r\n    } else {\r\n      const user = {\r\n        username: username,\r\n        password: pass,\r\n      };\r\n\r\n      fetch(\"/api/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      }).then((response) =>\r\n        response.json().then((signUpStatus) => {\r\n          if (signUpStatus == \"successful\") {\r\n            status.innerText = \"Account creation was successful.\";\r\n            status.style.color = \"green\";\r\n          } else if (signUpStatus == \"failed\") {\r\n            status.innerText = \"Username already exists.\";\r\n            status.style.color = \"red\";\r\n          } else {\r\n            status.innerText = \"An error has occured. Please try again.\";\r\n            status.style.color = \"red\";\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style>{\"body { background-color: #15202b; color: white;}\"}</style>\r\n        </Helmet>\r\n        <h1 className=\"text-center\">Create your Snookbook account</h1>\r\n        <div className=\"signup-container\">\r\n          <form action=\"POST\">\r\n            <p id=\"signup-status\"></p>\r\n            <label htmlFor=\"username\">Create Username</label>\r\n            <br />\r\n            <input type=\"text\" name=\"username\" id=\"input-name\" required />\r\n            <br />\r\n            <label htmlFor=\"password\">Create Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"input-password\"\r\n              required\r\n            />\r\n            <br />\r\n            <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmpassword\"\r\n              id=\"confirm-password\"\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Sign up\"\r\n              className=\"btn btn-primary my-3\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </form>\r\n          <p>\r\n            <Link to=\"/\">Login</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style>{\"body { background-color: #15202b; color: white;}\"}</style>\r\n        </Helmet>\r\n        <h1 className=\"text-center\">Snookbook - Facebook for Snooks</h1>\r\n        <div className=\"login-container\">\r\n          <form id=\"login-form\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <br/>\r\n            <input\r\n              id=\"input-name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              required\r\n            />\r\n            <br/>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <br/>\r\n            <input\r\n              id=\"input-password\"\r\n              type=\"password\"\r\n            />\r\n            <br/>\r\n            <button className=\"btn btn-primary my-3\" id=\"login-btn\">\r\n              Log in\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Don't have an account? <Link to=\"/signup\">Sign up.</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Posts from \"./components/posts\";\r\nimport SignUp from \"./components/signup\";\r\nimport Landing from \"./components/landing\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/posts\" component={Posts} />\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}