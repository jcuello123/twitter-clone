{"version":3,"sources":["util/posts.js","components/body.jsx","components/posts.jsx","components/header.jsx","components/signup.jsx","components/landing.jsx","App.js","serviceWorker.js","index.js"],"names":["appendPost","post","color","likes","img","div","document","createElement","className","profile_pic","id","src","alt","style","width","height","borderRadius","name","innerText","pic_name_container","display","appendChild","cssFloat","date","content","readOnly","like_container","likeButton","innerHTML","numOfLikes","undefined","addEventListener","liked","parseInt","postUpdate","fetch","then","response","json","user","username","method","headers","body","JSON","stringify","handleLike","querySelector","prepend","module","exports","listAllPosts","imageURL","getElementById","data","forEach","likedBy","includes","Body","Helmet","Component","Posts","state","imageData","imageName","ensureAuthenticated","status","props","history","push","handlePost","e","preventDefault","toString","form","formData","FormData","get","Date","toLocaleString","value","snookBtn","disabled","localStorage","setItem","setTimeout","window","location","reload","handleLogout","handleMenu","menu","ctr","onclick","handleChangeProfilePicture","animation","previewImage","oFReader","FileReader","files","readAsDataURL","setState","onload","oFREvent","target","result","updatePicture","substring","lastIndexOf","length","toLowerCase","userToUpdate","bind","this","getItem","href","onClick","type","accept","onChange","onSubmit","htmlFor","maxLength","required","withRouter","Header","SignUp","handleSubmit","pass","confirmPass","console","log","password","signUpStatus","to","Landing","handleLogin","catch","err","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1e669e28.chunk.js","sourcesContent":["function appendPost(post, color, likes, img) {\r\n  const div = document.createElement(\"div\");\r\n  div.className = \"post\";\r\n\r\n  const profile_pic = document.createElement(\"img\");\r\n  profile_pic.id = \"post_profile_pic\";\r\n  profile_pic.src = img;\r\n  profile_pic.alt = \"\";\r\n  profile_pic.style.width = \"50px\";\r\n  profile_pic.style.height = \"50px\";\r\n  profile_pic.style.borderRadius = \"25px\";\r\n\r\n  const name = document.createElement(\"h4\");\r\n  name.innerText = post.name;\r\n\r\n  const pic_name_container = document.createElement(\"span\");\r\n  pic_name_container.style.display = \"inline\";\r\n  pic_name_container.appendChild(profile_pic);\r\n  pic_name_container.appendChild(name);\r\n  profile_pic.style.cssFloat = \"left\";\r\n\r\n  const date = document.createElement(\"p\");\r\n  date.innerText = post.date;\r\n\r\n  const content = document.createElement(\"textarea\");\r\n  content.id = \"content\";\r\n  content.readOnly = true;\r\n  content.innerText = post.content;\r\n\r\n  const like_container = document.createElement(\"span\");\r\n\r\n  const likeButton = document.createElement(\"button\");\r\n  likeButton.innerHTML = \"&#x2661;\"; //heart symbol\r\n  likeButton.id = \"like-button\";\r\n  likeButton.style.color = color;\r\n\r\n  const numOfLikes = document.createElement(\"p\");\r\n  numOfLikes.id = \"numOfLikes\";\r\n  if (likes === undefined) likes = 0;\r\n  numOfLikes.innerText = likes;\r\n  numOfLikes.style.display = \"inline\";\r\n\r\n  likeButton.addEventListener(\"click\", () => {\r\n    handleLike(likeButton, numOfLikes, post);\r\n  });\r\n\r\n  like_container.style.display = \"inline\";\r\n  like_container.appendChild(likeButton);\r\n  like_container.appendChild(numOfLikes);\r\n\r\n  div.appendChild(pic_name_container);\r\n  div.appendChild(date);\r\n  div.appendChild(content);\r\n  div.appendChild(like_container);\r\n\r\n  document.querySelector(\".posts\").prepend(div);\r\n}\r\n\r\nfunction listAllPosts() {\r\n  //get req.user.username and profile pic for whoever is logged in\r\n  fetch(\"/api/posts/login\")\r\n    .then((response) => response.json())\r\n    .then((user) => {\r\n      if (user.imageURL) {\r\n        document.getElementById(\"profile_pic\").src = user.imageURL;\r\n        document.getElementById(\"pic_to_change\").src = user.imageURL;\r\n      }\r\n      document.getElementById(\"username\").innerHTML = user.username;\r\n\r\n      //get all posts\r\n      fetch(\"/api/posts\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          data.forEach((post) => {\r\n            const color = post.likedBy.includes(user.username)\r\n              ? \"pink\"\r\n              : \"#2d3842\";\r\n            const likes = post.likes;\r\n            appendPost(post, color, likes, post.profile_pic);\r\n          });\r\n        });\r\n    });\r\n}\r\n\r\nfunction handleLike(likeButton, numOfLikes, post) {\r\n  let liked = likeButton.style.color === \"pink\" ? false : true;\r\n\r\n  if (liked) {\r\n    likeButton.style.color = \"pink\";\r\n    numOfLikes.innerText = parseInt(numOfLikes.innerText) + 1;\r\n  } else {\r\n    likeButton.style.color = \"#2d3842\";\r\n    numOfLikes.innerText = parseInt(numOfLikes.innerText) - 1;\r\n    liked = false;\r\n  }\r\n\r\n  let postUpdate = {};\r\n\r\n  //get req.user.username\r\n  fetch(\"/api/posts/login\")\r\n    .then((response) => response.json())\r\n    .then((user) => {\r\n      postUpdate = {\r\n        post: post,\r\n        username: user.username,\r\n        liked: liked,\r\n      };\r\n    })\r\n\r\n    //send post that was just liked/unliked and process in server\r\n    .then((response) => {\r\n      fetch(\"/api/posts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(postUpdate),\r\n      });\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n  appendPost: appendPost,\r\n  listAllPosts: listAllPosts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass Body extends Component {\r\n  render() {\r\n    return (\r\n      <Helmet>\r\n        <style>\r\n          {\r\n            \"body { background-image: url(bg.jpg);background-position: fixed;background-repeat: no-repeat;background-size:cover; color: white;font-family: Rowdies,Georgia, serif;}\"\r\n          }\r\n        </style>\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { appendPost, listAllPosts } from \"../util/posts\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Body from \"./body\";\r\n\r\nclass Posts extends Component {\r\n  state = { imageData: \"\", imageName: \"\" };\r\n\r\n  constructor() {\r\n    super();\r\n    this.handlePost = this.handlePost.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ensureAuthenticated();\r\n\r\n    //disable the post button for 10 seconds after posting\r\n    const snookBtn = document.getElementById(\"snook-btn\");\r\n    snookBtn.disabled =\r\n      localStorage.getItem(\"isButtonDisabled\") === \"true\" ? true : false;\r\n\r\n    if (localStorage.getItem(\"isButtonDisabled\")) {\r\n      setTimeout(() => {\r\n        snookBtn.disabled = false;\r\n        localStorage.setItem(\"isButtonDisabled\", false);\r\n      }, 10000);\r\n    }\r\n\r\n    listAllPosts();\r\n  }\r\n\r\n  ensureAuthenticated = () => {\r\n    fetch(\"/api/posts\")\r\n      .then((response) => response.json())\r\n      .then((status) => {\r\n        if (status === \"failed\") {\r\n          this.props.history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  handlePost = (e) => {\r\n    e.preventDefault();\r\n\r\n    //format the post\r\n    const username = document.getElementById(\"username\").innerHTML.toString();\r\n    const form = document.getElementById(\"snook-form\");\r\n    const formData = new FormData(form);\r\n    const profile_pic = document.getElementById(\"profile_pic\").src;\r\n    const post = {\r\n      name: username,\r\n      content: formData.get(\"content\"),\r\n      date: new Date().toLocaleString(\"en-US\"),\r\n      profile_pic: profile_pic,\r\n    };\r\n\r\n    //Send post to server\r\n    fetch(\"/api/posts\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    });\r\n\r\n    //append post\r\n    appendPost(post);\r\n\r\n    //clear text\r\n    document.getElementById(\"input-content\").value = \"\";\r\n\r\n    //disable send button for 10 seconds\r\n    const snookBtn = document.getElementById(\"snook-btn\");\r\n    snookBtn.disabled = true;\r\n    localStorage.setItem(\"isButtonDisabled\", true);\r\n\r\n    setTimeout(() => {\r\n      snookBtn.disabled = false;\r\n      localStorage.setItem(\"isButtonDisabled\", false);\r\n    }, 10000);\r\n\r\n    //refresh the page\r\n    window.location.reload(true);\r\n  };\r\n\r\n  handleLogout = () => {\r\n    fetch(\"/api/posts/logout\").then((response) => {\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  handleMenu = () => {\r\n    const menu = document.querySelector(\".menu\");\r\n    const ctr = document.querySelector(\".change-pic-container\");\r\n\r\n    if (!menu.style.display || menu.style.display === \"none\")\r\n      menu.style.display = \"block\";\r\n    else menu.style.display = \"none\";\r\n\r\n    if (ctr.style.display === \"block\") ctr.style.display = \"none\";\r\n\r\n    document.getElementById(\r\n      \"change-pic-btn\"\r\n    ).onclick = this.handleChangeProfilePicture;\r\n  };\r\n\r\n  handleChangeProfilePicture = () => {\r\n    const ctr = document.querySelector(\".change-pic-container\");\r\n\r\n    if (!ctr.style.display || ctr.style.display === \"none\") {\r\n      ctr.style.animation = \"slidedown 0.3s\";\r\n      ctr.style.display = \"block\";\r\n    } else {\r\n      ctr.style.animation = \"slideup 0.3s\";\r\n      setTimeout(() => {\r\n        ctr.style.display = \"none\";\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  previewImage = () => {\r\n    let oFReader = new FileReader();\r\n    const img = document.getElementById(\"imgInput\").files[0];\r\n    oFReader.readAsDataURL(img);\r\n\r\n    this.setState({ imageName: img.name });\r\n\r\n    oFReader.onload = (oFREvent) => {\r\n      if (!oFREvent.target.result) return;\r\n      this.setState({ imageData: oFREvent.target.result });\r\n      document.getElementById(\"pic_to_change\").src = oFREvent.target.result;\r\n    };\r\n  };\r\n\r\n  updatePicture = () => {\r\n    const status = document.getElementById(\"status\");\r\n\r\n    if (\r\n      this.state.imageName\r\n        .substring(\r\n          this.state.imageName.lastIndexOf(\".\") + 1,\r\n          this.state.imageName.length\r\n        )\r\n        .toLowerCase() !== \"jpg\" &&\r\n      this.state.imageName\r\n        .substring(\r\n          this.state.imageName.lastIndexOf(\".\") + 1,\r\n          this.state.imageName.length\r\n        )\r\n        .toLowerCase() !== \"jpeg\" &&\r\n      this.state.imageName\r\n        .substring(\r\n          this.state.imageName.lastIndexOf(\".\") + 1,\r\n          this.state.imageName.length\r\n        )\r\n        .toLowerCase() !== \"png\"\r\n    ) {\r\n      status.style.color = \"red\";\r\n      status.innerText = \"Only jpg, jpeg, and png files are allowed!\";\r\n    } else {\r\n      const username = document.getElementById(\"username\").innerHTML.toString();\r\n      const userToUpdate = {\r\n        username: username,\r\n        imageData: this.state.imageData,\r\n      };\r\n\r\n      fetch(\"/api/update\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userToUpdate),\r\n      });\r\n      window.location.reload(true);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Body></Body>\r\n        <header>\r\n          <nav>\r\n            <a href=\"/\">\r\n              <img\r\n                src=\"logo.png\"\r\n                alt=\"\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              />\r\n            </a>\r\n\r\n            <button\r\n              id=\"logout-btn\"\r\n              className=\"m-2 mt-4\"\r\n              onClick={this.handleLogout}\r\n            >\r\n              Logout\r\n            </button>\r\n\r\n            <p id=\"username\" className=\"m-2\"></p>\r\n\r\n            <button id=\"profile-pic-btn btn\" onClick={this.handleMenu}>\r\n              <img\r\n                src=\"emptycontact.png\"\r\n                id=\"profile_pic\"\r\n                alt=\"\"\r\n                style={{ width: \"50px\", height: \"50px\", borderRadius: \"25px\" }}\r\n              />\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"menu\">\r\n            <button id=\"change-pic-btn\">Change profile picture</button>\r\n\r\n            <div className=\"change-pic-container text-center\">\r\n              <img src=\"emptycontact.png\" id=\"pic_to_change\" alt=\"\" />\r\n              <input\r\n                type=\"file\"\r\n                id=\"imgInput\"\r\n                accept=\"image/x-png,image/gif,image/jpeg\"\r\n                onChange={this.previewImage}\r\n              />\r\n              <br></br>\r\n              <p id=\"status\"></p>\r\n              <button\r\n                id=\"update-pic-btn\"\r\n                className=\"mt-5\"\r\n                onClick={this.updatePicture}\r\n              >\r\n                Change picture\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className=\"container posts-container mt-5\">\r\n          <h1 className=\"title text-center mb-5\">\r\n            Snookbook - Facebook for Snooks\r\n          </h1>\r\n          <form id=\"snook-form\" onSubmit={this.handlePost}>\r\n            <label htmlFor=\"content\">Content</label>\r\n            <br />\r\n            <textarea\r\n              id=\"input-content\"\r\n              className=\"inp\"\r\n              name=\"content\"\r\n              maxLength=\"200\"\r\n              required\r\n            ></textarea>\r\n            <br />\r\n            <button className=\"btn btn-primary my-3\" id=\"snook-btn\">\r\n              Send your Snook!\r\n            </button>\r\n          </form>\r\n          <div className=\"posts\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Posts);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <a href=\"/\">\r\n            <img\r\n              src=\"logo.png\"\r\n              alt=\"\"\r\n              style={{ width: \"100px\", height: \"100px\" }}\r\n            />\r\n          </a>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./header\";\r\nimport Body from \"./body\";\r\n\r\nclass SignUp extends Component {\r\n  state = { imageData: null, imageName: null };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const username = document.getElementById(\"input-name\").value;\r\n    const pass = document.getElementById(\"input-password\").value;\r\n    const confirmPass = document.getElementById(\"confirm-password\").value;\r\n    const imageData = this.state.imageData;\r\n    const status = document.getElementById(\"signup-status\");\r\n    console.log(\"image name:\", this.state.imageName);\r\n    status.style.color = \"red\";\r\n\r\n    if (pass !== confirmPass) {\r\n      status.innerText = \"Passwords don't match.\";\r\n    } else if (\r\n      this.state.imageName &&\r\n      this.state.imageName\r\n        .substring(\r\n          this.state.imageName.lastIndexOf(\".\") + 1,\r\n          this.state.imageName.length\r\n        )\r\n        .toLowerCase() !== \"jpg\" &&\r\n      this.state.imageName\r\n        .substring(\r\n          this.state.imageName.lastIndexOf(\".\") + 1,\r\n          this.state.imageName.length\r\n        )\r\n        .toLowerCase() !== \"jpeg\" &&\r\n      this.state.imageName\r\n        .substring(\r\n          this.state.imageName.lastIndexOf(\".\") + 1,\r\n          this.state.imageName.length\r\n        )\r\n        .toLowerCase() !== \"png\"\r\n    ) {\r\n      status.innerText = \"Only jpg, jpeg, and png files are allowed!\";\r\n    } else {\r\n      const user = {\r\n        username: username,\r\n        password: pass,\r\n        imageData: imageData,\r\n      };\r\n\r\n      fetch(\"/api/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      }).then((response) =>\r\n        response.json().then((signUpStatus) => {\r\n          if (signUpStatus === \"successful\") {\r\n            status.innerText = \"Account creation was successful.\";\r\n            status.style.color = \"green\";\r\n          } else {\r\n            if (signUpStatus === \"failed\") {\r\n              status.innerText = \"Username already exists.\";\r\n            } else if (signUpStatus === \"short\") {\r\n              status.innerText = \"Password must be longer than 5 characters.\";\r\n            } else if (signUpStatus === \"error\") {\r\n              status.innerText = \"An error has occured. Please try again.\";\r\n            }\r\n            status.style.color = \"red\";\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  previewImage = () => {\r\n    let oFReader = new FileReader();\r\n    const img = document.getElementById(\"uploadImage\").files[0];\r\n    oFReader.readAsDataURL(img);\r\n\r\n    this.setState({ imageName: img.name });\r\n\r\n    oFReader.onload = (oFREvent) => {\r\n      if (!oFREvent.target.result) return;\r\n      this.setState({ imageData: oFREvent.target.result });\r\n      document.getElementById(\"profile-picture\").src = oFREvent.target.result;\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Body></Body>\r\n        <Header></Header>\r\n        <h1 className=\"title text-center\">Create your Snookbook account</h1>\r\n        <div className=\"signup-container\">\r\n          <form>\r\n            <p>Choose a profile picture</p>\r\n            <img\r\n              src=\"emptycontact.png\"\r\n              alt=\"\"\r\n              id=\"profile-picture\"\r\n              className=\"mb-3\"\r\n              style={{ width: \"100px\", height: \"100px\", borderRadius: \"50px\" }}\r\n            />\r\n            <br></br>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/x-png,image/gif,image/jpeg\"\r\n              id=\"uploadImage\"\r\n              className=\"text-center\"\r\n              onChange={this.previewImage}\r\n            />\r\n            <p id=\"signup-status\" className=\"mt-2\"></p>\r\n            <label htmlFor=\"username\">Create Username</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"input-name\"\r\n              className=\"signup-inp\"\r\n              required\r\n            />\r\n            <br />\r\n            <label htmlFor=\"password\">Create Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"input-password\"\r\n              className=\"signup-inp\"\r\n              required\r\n            />\r\n            <br />\r\n            <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmpassword\"\r\n              id=\"confirm-password\"\r\n              className=\"signup-inp\"\r\n              required\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Sign up\"\r\n              id=\"signup-btn\"\r\n              className=\"btn btn-primary my-3\"\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </form>\r\n          <p>\r\n            Back to\r\n            <Link to=\"/\" id=\"login-link\">\r\n              {\" \"}\r\n              Login\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Header from \"./header\";\r\nimport Body from \"./body\";\r\n\r\nclass Landing extends Component {\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const username = document.getElementById(\"input-name\").value;\r\n    const password = document.getElementById(\"input-password\").value;\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    //send login info to server and try to authenticate\r\n    fetch(\"/api/posts/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((status) => {\r\n        this.props.history.push(\"posts\");\r\n      })\r\n      .catch((err) => {\r\n        const status = document.getElementById(\"login-status\");\r\n        status.style.color = \"red\";\r\n        status.innerText = \"Incorrect username or password\";\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Body></Body>\r\n        <Header></Header>\r\n\r\n        <div className=\"welcome-container\">\r\n          <p id=\"welcome-text\">Welcome to</p>\r\n          <p id=\"snookbook-text\">Snookbook..</p>\r\n          <p id=\"fav-text\">..Your favorite social media app</p>\r\n        </div>\r\n        <div className=\"login-container\">\r\n          <form id=\"login-form\">\r\n            <p id=\"login-status\"></p>\r\n            <label htmlFor=\"username\">Username</label>\r\n            <br />\r\n            <input\r\n              id=\"input-name\"\r\n              className=\"inp\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              required\r\n            />\r\n            <br />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <br />\r\n            <input id=\"input-password\" className=\"inp\" type=\"password\" />\r\n            <br />\r\n            <button\r\n              onClick={this.handleLogin}\r\n              className=\"btn btn-primary my-3\"\r\n              id=\"login-btn\"\r\n            >\r\n              Log in\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Don't have an account?{\" \"}\r\n            <Link to=\"/signup\" id=\"signup-link\">\r\n              Sign up.\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Posts from \"./components/posts\";\r\nimport SignUp from \"./components/signup\";\r\nimport Landing from \"./components/landing\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/posts\" component={Posts} />\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}